jobs:
  build-and-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - continue-on-error: true
      name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.S3_AWS_ACCESS_KEY_ID }}
        aws-region: eu-central-1
        aws-secret-access-key: ${{ secrets.S3_AWS_SECRET_ACCESS_KEY }}
    - continue-on-error: true
      id: set_env_values
      name: Set up environment
      run: 'cat "./kafka-ui-e2e-checks/.env.ci" >> "./kafka-ui-e2e-checks/.env"

        '
    - continue-on-error: true
      id: pull_chrome
      name: Pull with Docker
      run: 'docker pull selenoid/vnc_chrome:103.0

        '
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      id: build_app
      name: Build with Maven
      run: './mvnw -B -ntp versions:set -DnewVersion=${{ github.event.pull_request.head.sha
        }}

        ./mvnw -B -V -ntp clean install -Pprod -Dmaven.test.skip=true ${{ github.event.inputs.extraMavenOptions
        }}

        '
    - continue-on-error: true
      id: compose_app
      name: Compose with Docker
      run: 'docker-compose -f kafka-ui-e2e-checks/docker/selenoid-git.yaml up -d

        docker-compose -f ./documentation/compose/e2e-tests.yaml up -d && until [
        "$(docker exec  kafka-ui wget --spider  --server-response  http://localhost:8080/actuator/health
        2>&1 |  grep -c ''HTTP/1.1 200 OK'')" == "1" ]; do echo "Waiting for kafka-ui
        ..." && sleep 1; done

        '
    - continue-on-error: true
      name: Run test suite
      run: './mvnw -B -ntp versions:set -DnewVersion=${{ github.event.pull_request.head.sha
        }}

        ./mvnw -B -V -ntp -Dsurefire.suiteXmlFiles=''src/test/resources/smoke.xml''
        -f ''kafka-ui-e2e-checks'' test -Pprod

        '
    - continue-on-error: true
      id: allure-report
      if: always()
      name: Generate allure report
      uses: simple-elf/allure-report-action@master
      with:
        allure_report: allure-report
        allure_results: ./kafka-ui-e2e-checks/allure-results
        gh_pages: allure-results
        report_url: http://kafkaui-allure-reports.s3-website.eu-central-1.amazonaws.com
        subfolder: allure-results
    - continue-on-error: true
      env:
        AWS_REGION: eu-central-1
        AWS_S3_BUCKET: kafkaui-allure-reports
        SOURCE_DIR: allure-history/allure-results
      if: always()
      uses: jakejarvis/s3-sync-action@master
    - continue-on-error: true
      if: always()
      name: Deploy report to Amazon S3
      uses: Sibz/github-status-action@v1.1.6
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        context: Click Details button to open Allure report
        sha: ${{ github.event.pull_request.head.sha  || github.sha }}
        state: success
        target_url: http://kafkaui-allure-reports.s3-website.eu-central-1.amazonaws.com/${{
          github.run_number }}
    - continue-on-error: true
      if: failure()
      name: Dump docker logs on failure
      uses: jwalton/gh-docker-logs@v2.2.1
name: 'E2E: PR healthcheck'
on:
  repository_dispatch:
    types: trigger-ga___e2e-checks.yaml
permissions:
  statuses: write
